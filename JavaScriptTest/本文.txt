

■ざっくり条件指定
　見積りたいプロジェクトについてわかっている条件を入力します。全ての項目を入力しなくても、
「生産性」とそれ以外に少なくとも１項目を入力することで見積りができます。
この場合、入力があった項目を元にして他の項目の値を補完計算して見積りを行います。
生産性がわからなければ、まずはフォルト値のままで問題ありません。


■基礎数値
　指定された条件から算出した見積り値で、プロジェクトの全工程にかかる数値です。
　ざっくり条件指定で未入力だった項目の補完計算や、その値を元にした工期を算出した結果です。
　またポーラーチャートでは、入力した条件とは違った観点で算出した値との比較結果を表しています。

■グラフ
　工程比率・工期比率によって基礎数値を分割し、各工程ごとに必要な期間・工数を算出したものです。
　スライダの両端を動かすことで、任意の工程範囲を表示することができます。


■はじめに


見積るときには、勘・経験・度胸によるKKD法やファンクションポイント法、WBS積み上げ法、標準値法を使う。
見積り結果の検算として複数の見積り法を利用することで、一般的な値との乖離に気づくことができる。
しかし、見積り期間は短いことが多いため、複数の見積りを併用することは難しいことがある。
係数見積りでは、計算や統計値によって見積るため、手間をあまりかけずに見積ることができる。

ソフトウェアの開発見積りは曖昧な計算となりやすい。
過去の見積りの実績の積み上げがないことが多い。
見積もった本人でも結果について確証が持てないため、相手から根拠を求められても受け答えに困る。
無茶な条件を提示されたときに、理論的に反証することができない。

それ以外の使い方
　・開発期間のみ、工数のみなどの断片的な情報しかないような場合にざっくりとあたりをつける
　・少しずつ条件を変えながら、今後規模が増えたときに工数／期間がどうなっていくのかを予測する
　・スケジュールに無理がある場合に、規模や期間のトレードオフのためのシミュレートする
　・他のプロジェクトの条件を入れてみて、適合してるか見てほくそ笑む

係数見積りが完璧だとしても、プロジェクトに携わるメンバーの技術や知識、
マネージメントの円滑性などの質が悪ければ、当然うまく進まないことに注意が必要。

